[{"path":"https://josesamos.github.io/geomultistar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 geomultistar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Geographical Queries on Multidimensional Data","text":"multidimensional data model defined aim supporting data analysis. multidimensional systems, data structured facts dimensions1. star model widely accepted, recommended use widely distributed end-user tools. table facts table dimension. Dimensions provide factual views easy querying. geographical dimension plays fundamental role multidimensional systems. multidimensional schema, can one geographic dimension. dimensions allow us associate places different levels detail factual data. example, can record data city level later may interested studying grouped zone nation level. interesting possibility representing reports obtained multidimensional systems, using geographic dimensions, map, performing spatial analysis . Thus, goal package enrich multidimensional queries geographic data. words, question making spatial queries generating spatial layer result multidimensional queries generation done automatically, configuration geographical dimensions made. rest document structured follows: illustrative example package works presented. , document ends conclusions.","code":""},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"an-illustrative-example","dir":"Articles","previous_headings":"","what":"An illustrative example","title":"Geographical Queries on Multidimensional Data","text":"perform multidimensional queries, multistar class defined starschemar package. multistar implements star schemas: table dimension table facts; however, can contain multiple fact tables dimensions common. Using functions defined starschemar package, starting flat table implemented means tibble, can generate multistar object. already star schema, geomultistar package offers functions generate multistar object fact dimension tables tibble format.","code":""},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"generate-a-multistar-object","dir":"Articles","previous_headings":"An illustrative example","what":"Generate a multistar object","title":"Geographical Queries on Multidimensional Data","text":"case, going suppose tables facts dimensions tibble format, imported R. particular, tables mrs_fact_age, mrs_fact_cause, mrs_where, mrs_when mrs_who, obtained example presented package starschemar: Two fact tables share two three dimensions.","code":""},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"add-fact-tables","dir":"Articles","previous_headings":"An illustrative example > Generate a multistar object","what":"Add fact tables","title":"Geographical Queries on Multidimensional Data","text":"create empty object, add elements. First add fact table, later add dimension tables fact tables. facts indicate name, table contains data names columns contain measures. can indicate aggregation function associated measure. parameter defined measure additive. case necessary. Finally, can indicate name field represents number rows grouped query: can indicate name existing column table purpose, name want give column added none exists. case, name column table assigned. Next add another table facts characteristics similar previous one. case, column contains number grouped rows precisely name assigned default.","code":"ms <- multistar() |>   add_facts(     fact_name = \"mrs_age\",     fact_table = mrs_fact_age,     measures = \"n_deaths\",     nrow_agg = \"count\"   ) ms <- ms |>   add_facts(     fact_name = \"mrs_cause\",     fact_table = mrs_fact_cause,     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\"),     nrow_agg = \"nrow_agg\"   )"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"add-dimension-tables","dir":"Articles","previous_headings":"An illustrative example > Generate a multistar object","what":"Add dimension tables","title":"Geographical Queries on Multidimensional Data","text":"least one fact table, can add dimension tables. dimension define name, table contains data, name primary key , table facts going relate , name name corresponding foreign key. establish relationship successfully, verified referential integrity tables using indicated columns. columns corresponding primary foreign keys renamed longer available queries. want keep field dimension, can indicated parameter, shown parameter key_as_data. dimension related one fact table, added, relationship one can defined. Later, additional relationships can defined, see next.","code":"ms <- ms |>   add_dimension(     dimension_name = \"where\",     dimension_table = mrs_where,     dimension_key = \"where_pk\",     fact_name = \"mrs_age\",     fact_key = \"where_fk\"   ) ms <- ms |>   add_dimension(     dimension_name = \"when\",     dimension_table = mrs_when,     dimension_key = \"when_pk\",     fact_name = \"mrs_age\",     fact_key = \"when_fk\",     key_as_data = TRUE   ) |>   add_dimension(     dimension_name = \"who\",     dimension_table = mrs_who,     dimension_key = \"who_pk\",     fact_name = \"mrs_age\",     fact_key = \"who_fk\"   )"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"relate-dimensions","dir":"Articles","previous_headings":"An illustrative example > Generate a multistar object","what":"Relate dimensions","title":"Geographical Queries on Multidimensional Data","text":"dimension included multistar, can relate fact tables. case, specify dimension indicate name.","code":"ms <- ms |>   relate_dimension(dimension_name = \"where\",                    fact_name = \"mrs_cause\",                    fact_key = \"where_fk\") |>   relate_dimension(dimension_name = \"when\",                    fact_name = \"mrs_cause\",                    fact_key = \"when_fk\")"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"additional-operations-on-the-multistar-object","dir":"Articles","previous_headings":"An illustrative example > Generate a multistar object","what":"Additional operations on the multistar object","title":"Geographical Queries on Multidimensional Data","text":"previous operations, generate multistar object can apply operations defined starschemar package class. moment can export flat table, using multistar_as_flat_table, define multidimensional queries, later use dimensional_query.","code":""},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"define-geographic-dimensions-and-attributes","dir":"Articles","previous_headings":"An illustrative example","what":"Define geographic dimensions and attributes","title":"Geographical Queries on Multidimensional Data","text":"define dimensions geographic attributes multistar object, must define geomultistar specialization , allows store information. create geomultistar object multistar one defining names dimensions contain geographic information. example one dimension. attribute geographic dimension want use queries, can define vector layer relationship can established using one attributes dimension. city attribute, relationship defined vector layer sf format (usa_cities), using city state attributes2 name layer. Sometimes may problems establishing correspondence geographic attributes vector layer: Instances may remain unrelated. detect situations, can query rows associated geometry using following function. result obtained shown . case, unknown cities, location determined. may several geographic data less granularity may known. way, relationship county corresponding layer (usa_counties) defined. check related. result obtained shown . also happens instances. case can see associated geometry different type. case state definition carried associating code corresponding one layer (usa_states). Additionally, attribute can generate layer one associated another related attribute dimension. done division. case, vector layer generated data available layer consideration. Sometimes precisely desired. , look vector layer level detail. attribute name indicated, operation applied rest attributes dimension associated vector layer methods presented, shown . attributes dimension associated layer, defined level granularity3. hand, can change layer attribute time, independently rest.","code":"gms <-   geomultistar(ms, geodimension = \"where\") gms <- gms |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   ) empty_city <- gms |>   get_empty_geoinstances(attribute = \"city\") gms <- gms |>   define_geoattribute(     attribute = \"county\",     from_layer = usa_counties,     by = c(\"county\" = \"county\", \"state\" = \"state\")   ) empty_county <- gms |>   get_empty_geoinstances(attribute = \"county\") gms <- gms |>   define_geoattribute(     attribute = c(\"state\"),     from_layer = usa_states,     by = c(\"state\" = \"state\")   ) gms <- gms |>   define_geoattribute(     attribute = \"division\",     from_attribute = \"state\"   ) gms <- gms |>   define_geoattribute(from_attribute = \"state\")"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"define-multidimensional-queries","dir":"Articles","previous_headings":"An illustrative example","what":"Define multidimensional queries","title":"Geographical Queries on Multidimensional Data","text":"Multidimensional queries defined multistar object starschemar package. Since working geomultistar, specialization multistar, can use object define query. definition functions type queries quite intuitive, explained vignette package starschemar. use function run_query mentioned package, normal multidimensional query executed, shown . result type query multistar object, can transform flat table display easily, first rows..","code":"library(starschemar)  gdqr <- dimensional_query(gms) |>   select_dimension(name = \"where\",                    attributes = c(\"division_name\", \"region_name\")) |>   select_dimension(name = \"when\",                    attributes = c(\"year\", \"week\")) |>   select_fact(name = \"mrs_age\",               measures = c(\"n_deaths\")) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", week <= \"03\") ft <- gdqr |>   run_query() |>   multistar_as_flat_table()"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"run-queries-adding-geographic-information","dir":"Articles","previous_headings":"An illustrative example","what":"Run queries adding geographic information","title":"Geographical Queries on Multidimensional Data","text":"instead executing standard query, execute run_geoquery function, package, automatically obtain vector layer finest possible level detail, depending definition query. first rows result can seen table form. result vector layer can save, perform spatial analysis queries , can see map, using functions associated sf class.  Although indicated query attributes division_name region_name, can seen figure, result obtained finest granularity level, case division_name level. parts divisions made states recorded data shown. wanted show full extent division, explicitly associated layer level.","code":"vl_sf <- gdqr |>   run_geoquery() class(vl_sf) #> [1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"  plot(vl_sf[,\"n_deaths\"])"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"get-wide-tables","dir":"Articles","previous_headings":"An illustrative example","what":"Get wide tables","title":"Geographical Queries on Multidimensional Data","text":"geographic layers, geographic objects usually repeated. tables wide: object rest attributes defined columns. means parameter wider can indicate want result type. first rows result can seen table form. can see attributes multivalued geographic object eliminated result table, new measurement columns generated: one combination values attributes original measurements. meaning name columns measurements part result obtained, also table format, can seen . case one variable multiplicity greater one. variables situation, added table way. dictionary table layer structure can saved GeoPackage format using save_as_geopackage function. GeoPackages thus obtained can used directly, example QGIS.","code":"vl_sf_w <- gdqr |>   run_geoquery(wider = TRUE) save_as_geopackage(vl_sf_w, \"division\")"},{"path":"https://josesamos.github.io/geomultistar/articles/geomultistar.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Geographical Queries on Multidimensional Data","text":"generate multidimensional structure define queries, can use functions starschemar package , already multidimensional design implemented, import functions included package. geomultistar package allows generating vector layers sf format result multidimensional queries. , need associate vector layers attributes geographic dimensions, layers associated rest attributes can obtained automatically. Queries present additional difficulties due fact returning geographic data. data obtained can processed sf package define spatial queries analysis, presented maps saved file used GIS (Geographical Information System).","code":""},{"path":"https://josesamos.github.io/geomultistar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer, copyright holder.","code":""},{"path":"https://josesamos.github.io/geomultistar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2023). geomultistar: Multidimensional Queries Enriched Geographic Data. https://josesamos.github.io/geomultistar/, https://github.com/josesamos/geomultistar.","code":"@Manual{,   title = {geomultistar: Multidimensional Queries Enriched with Geographic Data},   author = {Jose Samos},   year = {2023},   note = {https://josesamos.github.io/geomultistar/, https://github.com/josesamos/geomultistar}, }"},{"path":"https://josesamos.github.io/geomultistar/index.html","id":"geomultistar-","dir":"","previous_headings":"","what":"Multidimensional Queries Enriched with Geographic Data","title":"Multidimensional Queries Enriched with Geographic Data","text":"Multidimensional systems allow complex queries carried easy way. geographic dimension, together temporal dimension, plays fundamental role multidimensional systems. geomultistar package, vector layers can associated attributes geographic dimensions, results multidimensional queries can obtained directly vector layers. words, package allows enriching multidimensional queries geographic data. multidimensional structures can define queries can created flat tables starschemar package imported directly using functions geomultistar package.","code":""},{"path":"https://josesamos.github.io/geomultistar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multidimensional Queries Enriched with Geographic Data","text":"can install released version geomultistar CRAN : development version GitHub :","code":"install.packages(\"geomultistar\") # install.packages(\"devtools\") devtools::install_github(\"josesamos/geomultistar\")"},{"path":"https://josesamos.github.io/geomultistar/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Multidimensional Queries Enriched with Geographic Data","text":"start flat table, can generate star schema using starschemar package, described examples. star schema another tool, need import fact dimension tables R form tables implemented tibble (mrs_fact_age, mrs_fact_cause, mrs_where, mrs_when mrs_who example). format, build multistar structure : structure can contain multiple fact dimension tables, facts can share dimensions. definition tables obtained case detailed starschemar included . measures facts defined relationships facts dimensions established. multistar structure, associate vector layers attributes geographic dimensions. can use existing layers generate previous definitions. result geomultistar structure. last definition, geographic attribute specified, rest dimension’s attributes automatically defined layer associated indicated parameter. Finally, can define multidimensional queries structure using functions available starschemar package. executing queries, using functionality implemented package geomultistar, vector layers attributes taken account result new vector layer. result vector layer can save can see map, using functions associated sf class.  Although indicated query attributes division_name region_name, can seen figure, result obtained finest granularity level, case division_name level. parts divisions made states recorded data shown. wanted show full extent division, explicitly associated layer level. result includes meaning variable table form. can saved directly GeoPackage, using save_as_geopackage function.","code":"library(geomultistar)  ms <- multistar() |>   add_facts(     fact_name = \"mrs_age\",     fact_table = mrs_fact_age,     measures = \"n_deaths\",     nrow_agg = \"count\"   ) |>   add_facts(     fact_name = \"mrs_cause\",     fact_table = mrs_fact_cause,     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\"),     nrow_agg = \"nrow_agg\"   ) |>   add_dimension(     dimension_name = \"where\",     dimension_table = mrs_where,     dimension_key = \"where_pk\",     fact_name = \"mrs_age\",     fact_key = \"where_fk\"   ) |>   add_dimension(     dimension_name = \"when\",     dimension_table = mrs_when,     dimension_key = \"when_pk\",     fact_name = \"mrs_age\",     fact_key = \"when_fk\",     key_as_data = TRUE   ) |>   add_dimension(     dimension_name = \"who\",     dimension_table = mrs_who,     dimension_key = \"who_pk\",     fact_name = \"mrs_age\",     fact_key = \"who_fk\"   ) |>   relate_dimension(dimension_name = \"where\",                    fact_name = \"mrs_cause\",                    fact_key = \"where_fk\") |>   relate_dimension(dimension_name = \"when\",                    fact_name = \"mrs_cause\",                    fact_key = \"when_fk\") gms <-   geomultistar(ms, geodimension = \"where\") |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   ) |>   define_geoattribute(     attribute = \"county\",     from_layer = usa_counties,     by = c(\"county\" = \"county\", \"state\" = \"state\")   )  |>   define_geoattribute(     attribute = c(\"state\"),     from_layer = usa_states,     by = c(\"state\" = \"state\")   ) |>   define_geoattribute(from_attribute = \"state\") library(starschemar)  gdqr <- dimensional_query(gms) |>   select_dimension(name = \"where\",                    attributes = c(\"division_name\", \"region_name\")) |>   select_dimension(name = \"when\",                    attributes = c(\"year\", \"week\")) |>   select_fact(name = \"mrs_age\",               measures = c(\"n_deaths\")) |>   select_fact(     name = \"mrs_cause\",     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")   ) |>   filter_dimension(name = \"when\", week <= \"03\") |>   run_geoquery(wider = TRUE) class(gdqr) #> [1] \"list\"  plot(gdqr$sf[,\"n_deaths_01\"]) save_as_geopackage(vl_sf_w, \"division\")"},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a dimension table to a multistar — add_dimension","title":"Add a dimension table to a multistar — add_dimension","text":"add dimension table multistar object, must indicate name give dimension, tibble contains data name attribute corresponding table primary key.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a dimension table to a multistar — add_dimension","text":"","code":"add_dimension(   ms,   dimension_name = NULL,   dimension_table = NULL,   dimension_key = NULL,   fact_name = NULL,   fact_key = NULL,   key_as_data = FALSE )  # S3 method for multistar add_dimension(   ms,   dimension_name = NULL,   dimension_table = NULL,   dimension_key = NULL,   fact_name = NULL,   fact_key = NULL,   key_as_data = FALSE )"},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a dimension table to a multistar — add_dimension","text":"ms multistar object. dimension_name string, name dimension table. dimension_table tibble, dimension table. dimension_key string, name dimension primary key. fact_name string, name fact table. fact_key string, name dimension foreign key. key_as_data boolean, define primary key attribute dimension accessible queries?","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a dimension table to a multistar — add_dimension","text":"multistar.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a dimension table to a multistar — add_dimension","text":"add dimension without defining correspondence one multistar's fact tables. define name fact table name foreign key. referential integrity instances facts checked. attribute used primary key longer accessible queries (function considered exclusively related facts). want use queries, must explicitly indicated boolean parameter key_as_data.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/add_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a dimension table to a multistar — add_dimension","text":"","code":"ms <- multistar() |>   add_facts(     fact_name = \"mrs_age\",     fact_table = mrs_fact_age,     measures = \"n_deaths\",     nrow_agg = \"count\"   ) |>   add_facts(     fact_name = \"mrs_cause\",     fact_table = mrs_fact_cause,     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\"),     nrow_agg = \"nrow_agg\"   ) |>   add_dimension(     dimension_name = \"where\",     dimension_table = mrs_where,     dimension_key = \"where_pk\",     fact_name = \"mrs_age\",     fact_key = \"where_fk\"   ) |>   add_dimension(     dimension_name = \"when\",     dimension_table = mrs_when,     dimension_key = \"when_pk\",     fact_name = \"mrs_age\",     fact_key = \"when_fk\",     key_as_data = TRUE   ) |>   add_dimension(     dimension_name = \"who\",     dimension_table = mrs_who,     dimension_key = \"who_pk\",     fact_name = \"mrs_age\",     fact_key = \"who_fk\"   )"},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a fact table to a multistar — add_facts","title":"Add a fact table to a multistar — add_facts","text":"add fact table multistar object, must indicate name give facts, tibble contains data vector attribute names corresponding measures.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a fact table to a multistar — add_facts","text":"","code":"add_facts(   ms,   fact_name = NULL,   fact_table = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = \"nrow_agg\" )  # S3 method for multistar add_facts(   ms,   fact_name = NULL,   fact_table = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = \"nrow_agg\" )"},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a fact table to a multistar — add_facts","text":"ms multistar object. fact_name string, name fact table. fact_table tibble, fact table. measures vector measure names. agg_functions vector aggregation function names. none indicated, default SUM. Additionally can MAX MIN. nrow_agg string, measurement name number rows aggregated. exist, added table.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a fact table to a multistar — add_facts","text":"multistar.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a fact table to a multistar — add_facts","text":"Associated measurement, aggregation function required, default SUM. can SUM, MAX MIN. Mean considered among possible aggregation functions: reason calculating mean considering subsets data necessarily yield mean total data. additional measurement, nrow_agg, corresponding number aggregated rows always added , together SUM, allows us obtain mean needed. value parameter, can specify attribute table name want assign (exist, added table).","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/add_facts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a fact table to a multistar — add_facts","text":"","code":"ms <- multistar() |>   add_facts(     fact_name = \"mrs_age\",     fact_table = mrs_fact_age,     measures = \"n_deaths\",     nrow_agg = \"count\"   ) |>   add_facts(     fact_name = \"mrs_cause\",     fact_table = mrs_fact_cause,     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\"),     nrow_agg = \"nrow_agg\"   )"},{"path":"https://josesamos.github.io/geomultistar/reference/add_geodimension_additional_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add geodimension additional attributes — add_geodimension_additional_attributes","title":"Add geodimension additional attributes — add_geodimension_additional_attributes","text":"Adds geodimension attributes explicitly selected query included definition.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_geodimension_additional_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add geodimension additional attributes — add_geodimension_additional_attributes","text":"","code":"add_geodimension_additional_attributes(dq)"},{"path":"https://josesamos.github.io/geomultistar/reference/add_geodimension_additional_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add geodimension additional attributes — add_geodimension_additional_attributes","text":"dq dimensional_query object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/add_geodimension_additional_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add geodimension additional attributes — add_geodimension_additional_attributes","text":"dimensional_query object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/default_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Default attribute — default_attribute","title":"Default attribute — default_attribute","text":"Get attribute instances, one.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/default_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default attribute — default_attribute","text":"","code":"default_attribute(dq, dimension)"},{"path":"https://josesamos.github.io/geomultistar/reference/default_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default attribute — default_attribute","text":"dq dimensional_query object. dimension string, name geographic dimension.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/default_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default attribute — default_attribute","text":"string, name attribute.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Define geographic attributes — define_geoattribute","title":"Define geographic attributes — define_geoattribute","text":"Defines geographic attributes two possible ways: Associates instances attributes geographic dimension instances geographic layer defines geometry another previously defined geographic attribute. Multiple attributes can specified attribute parameter.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define geographic attributes — define_geoattribute","text":"","code":"define_geoattribute(   gms,   dimension = NULL,   attribute = NULL,   additional_attributes = NULL,   from_layer = NULL,   by = NULL,   from_attribute = NULL )  # S3 method for geomultistar define_geoattribute(   gms,   dimension = NULL,   attribute = NULL,   additional_attributes = NULL,   from_layer = NULL,   by = NULL,   from_attribute = NULL )"},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define geographic attributes — define_geoattribute","text":"gms geomultistar object. dimension string, dimension name. attribute vector, attribute names. additional_attributes vector, attribute names. from_layer sf object. vector correspondence attributes dimension sf layer structure. from_attribute string, attribute name.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define geographic attributes — define_geoattribute","text":"geomultistar object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define geographic attributes — define_geoattribute","text":"defined layer (from_layer parameter), additionally attributes used join tables (dimension layer tables) must indicated (parameter). defined another attribute, finer granularity, obtain result grouping instances. value indicated attribute parameter, defined attributes dimension previous definition, obtained attribute indicated from_attribute parameter.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define geographic attributes — define_geoattribute","text":"","code":"library(starschemar)  gms <- geomultistar(ms = ms_mrs, geodimension = \"where\") |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   )  gms <- gms |>   define_geoattribute(attribute = c(\"region\", \"all_where\"),                       from_attribute = \"city\")  gms <- gms |>   define_geoattribute(from_attribute = \"city\")  gms <- gms |>   define_geoattribute(attribute = \"all_where\",                       from_layer = usa_nation)"},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a geoattribute from another — define_geoattribute_from_attribute","title":"Define a geoattribute from another — define_geoattribute_from_attribute","text":"Define geoattribute another.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a geoattribute from another — define_geoattribute_from_attribute","text":"","code":"define_geoattribute_from_attribute(   gms,   dimension = NULL,   attribute = NULL,   from_attribute = NULL,   additional_attributes = NULL )"},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a geoattribute from another — define_geoattribute_from_attribute","text":"gms geomultistar object. dimension string, dimension name. attribute string, attribute name. from_attribute string, attribute name. additional_attributes vector, attribute names.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a geoattribute from another — define_geoattribute_from_attribute","text":"geomultistar object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Define an attribute from a layer — define_geoattribute_from_layer","title":"Define an attribute from a layer — define_geoattribute_from_layer","text":"Define attribute layer.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define an attribute from a layer — define_geoattribute_from_layer","text":"","code":"define_geoattribute_from_layer(   gms,   dimension = NULL,   attribute = NULL,   from_layer = NULL,   by = NULL )"},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define an attribute from a layer — define_geoattribute_from_layer","text":"gms geomultistar object. dimension string, dimension name. attribute string, attribute name. from_layer sf object vector correspondence attributes dimension sf structure.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/define_geoattribute_from_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define an attribute from a layer — define_geoattribute_from_layer","text":"geomultistar object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/geomultistar.html","id":null,"dir":"Reference","previous_headings":"","what":"geomultistar S3 class — geomultistar","title":"geomultistar S3 class — geomultistar","text":"geomultistar object created. Dimensions contain geographic information indicated.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/geomultistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geomultistar S3 class — geomultistar","text":"","code":"geomultistar(ms = NULL, geodimension = NULL)"},{"path":"https://josesamos.github.io/geomultistar/reference/geomultistar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geomultistar S3 class — geomultistar","text":"ms multistar structure. geodimension vector dimension names.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/geomultistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geomultistar S3 class — geomultistar","text":"geomultistar object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/geomultistar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geomultistar S3 class — geomultistar","text":"","code":"library(starschemar)  r <- ct_mrs |>   constellation_as_multistar()  gms <- geomultistar(ms = r, geodimension = \"where\")"},{"path":"https://josesamos.github.io/geomultistar/reference/get_empty_geoinstances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get empty instances of a geographic attribute — get_empty_geoinstances","title":"Get empty instances of a geographic attribute — get_empty_geoinstances","text":"Gets instances given geographic attribute geometry associated .","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/get_empty_geoinstances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get empty instances of a geographic attribute — get_empty_geoinstances","text":"","code":"get_empty_geoinstances(gms, dimension = NULL, attribute = NULL)  # S3 method for geomultistar get_empty_geoinstances(gms, dimension = NULL, attribute = NULL)"},{"path":"https://josesamos.github.io/geomultistar/reference/get_empty_geoinstances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get empty instances of a geographic attribute — get_empty_geoinstances","text":"gms geomultistar object. dimension string, dimension name. attribute string, attribute name.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/get_empty_geoinstances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get empty instances of a geographic attribute — get_empty_geoinstances","text":"sf object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/get_empty_geoinstances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get empty instances of a geographic attribute — get_empty_geoinstances","text":"","code":"library(starschemar)  gms <- geomultistar(ms = ms_mrs, geodimension = \"where\") |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   )    empty <- gms |>      get_empty_geoinstances(attribute = \"city\")"},{"path":"https://josesamos.github.io/geomultistar/reference/get_selected_measure_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get_selected_measure_names — get_selected_measure_names","title":"get_selected_measure_names — get_selected_measure_names","text":"Get names measures selected query.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/get_selected_measure_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_selected_measure_names — get_selected_measure_names","text":"","code":"get_selected_measure_names(dq, ft)"},{"path":"https://josesamos.github.io/geomultistar/reference/get_selected_measure_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_selected_measure_names — get_selected_measure_names","text":"dq dimensional_query object. ft tibble object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/get_selected_measure_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_selected_measure_names — get_selected_measure_names","text":"vector names.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Fact age — mrs_fact_age","title":"Fact age — mrs_fact_age","text":"Fact age table Mortality Reporting System. Defined ms_mrs. Foreign keys renamed, dimension considered, type dimension changed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fact age — mrs_fact_age","text":"","code":"mrs_fact_age"},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fact age — mrs_fact_age","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_age.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fact age — mrs_fact_age","text":"https://CRAN.R-project.org/package=starschemar","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Fact cause — mrs_fact_cause","title":"Fact cause — mrs_fact_cause","text":"Fact cause table Mortality Reporting System. Defined ms_mrs. Foreign keys renamed, dimension considered, type dimension changed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fact cause — mrs_fact_cause","text":"","code":"mrs_fact_cause"},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_cause.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fact cause — mrs_fact_cause","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_fact_cause.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fact cause — mrs_fact_cause","text":"https://CRAN.R-project.org/package=starschemar","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_when.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension when — mrs_when","title":"Dimension when — mrs_when","text":"dimension table Mortality Reporting System. Defined ms_mrs. primary key renamed type changed. attributes also renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_when.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension when — mrs_when","text":"","code":"mrs_when"},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_when.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dimension when — mrs_when","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_when.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dimension when — mrs_when","text":"https://CRAN.R-project.org/package=starschemar","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_where.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension where — mrs_where","title":"Dimension where — mrs_where","text":"dimension table Mortality Reporting System. Defined ms_mrs. primary key renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension where — mrs_where","text":"","code":"mrs_where"},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_where.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dimension where — mrs_where","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_where.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dimension where — mrs_where","text":"https://CRAN.R-project.org/package=starschemar","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_who.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension who — mrs_who","title":"Dimension who — mrs_who","text":"dimension table Mortality Reporting System. Defined ms_mrs. primary key renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_who.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension who — mrs_who","text":"","code":"mrs_who"},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_who.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dimension who — mrs_who","text":"tibble.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/mrs_who.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dimension who — mrs_who","text":"https://CRAN.R-project.org/package=starschemar","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/multistar.html","id":null,"dir":"Reference","previous_headings":"","what":"multistar S3 class — multistar","title":"multistar S3 class — multistar","text":"Creates empty multistar object allows import fact dimension tables.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/multistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multistar S3 class — multistar","text":"","code":"multistar()"},{"path":"https://josesamos.github.io/geomultistar/reference/multistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multistar S3 class — multistar","text":"multistar object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/multistar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multistar S3 class — multistar","text":"","code":"ms <- multistar()"},{"path":"https://josesamos.github.io/geomultistar/reference/new_geomultistar.html","id":null,"dir":"Reference","previous_headings":"","what":"geomultistar S3 class — new_geomultistar","title":"geomultistar S3 class — new_geomultistar","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/new_geomultistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geomultistar S3 class — new_geomultistar","text":"","code":"new_geomultistar(ms = NULL, geodimension = NULL)"},{"path":"https://josesamos.github.io/geomultistar/reference/new_geomultistar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geomultistar S3 class — new_geomultistar","text":"ms multistar structure. geodimension vector dimension names.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/new_geomultistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geomultistar S3 class — new_geomultistar","text":"geomultistar object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/new_multistar.html","id":null,"dir":"Reference","previous_headings":"","what":"multistar S3 class — new_multistar","title":"multistar S3 class — new_multistar","text":"Internal low-level constructor creates new objects correct structure.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/new_multistar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multistar S3 class — new_multistar","text":"","code":"new_multistar()"},{"path":"https://josesamos.github.io/geomultistar/reference/new_multistar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multistar S3 class — new_multistar","text":"multistar object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/relate_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Relate a dimension table to a fact table in a multistar — relate_dimension","title":"Relate a dimension table to a fact table in a multistar — relate_dimension","text":"Adding dimension multistar can relate fact table. can relate fact tables multistar using function. name fact table foreign key must indicated. referential integrity instances facts checked.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/relate_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relate a dimension table to a fact table in a multistar — relate_dimension","text":"","code":"relate_dimension(ms, dimension_name = NULL, fact_name = NULL, fact_key = NULL)  # S3 method for multistar relate_dimension(ms, dimension_name = NULL, fact_name = NULL, fact_key = NULL)"},{"path":"https://josesamos.github.io/geomultistar/reference/relate_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relate a dimension table to a fact table in a multistar — relate_dimension","text":"ms multistar object. dimension_name string, name dimension table. fact_name string, name fact table. fact_key string, name dimension foreign key.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/relate_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relate a dimension table to a fact table in a multistar — relate_dimension","text":"multistar.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/relate_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relate a dimension table to a fact table in a multistar — relate_dimension","text":"","code":"ms <- multistar() |>   add_facts(     fact_name = \"mrs_age\",     fact_table = mrs_fact_age,     measures = \"n_deaths\",     nrow_agg = \"count\"   ) |>   add_facts(     fact_name = \"mrs_cause\",     fact_table = mrs_fact_cause,     measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\"),     nrow_agg = \"nrow_agg\"   ) |>   add_dimension(     dimension_name = \"where\",     dimension_table = mrs_where,     dimension_key = \"where_pk\",     fact_name = \"mrs_age\",     fact_key = \"where_fk\"   ) |>   add_dimension(     dimension_name = \"when\",     dimension_table = mrs_when,     dimension_key = \"when_pk\",     fact_name = \"mrs_age\",     fact_key = \"when_fk\",     key_as_data = TRUE   ) |>   add_dimension(     dimension_name = \"who\",     dimension_table = mrs_who,     dimension_key = \"who_pk\",     fact_name = \"mrs_age\",     fact_key = \"who_fk\"   ) |>   relate_dimension(dimension_name = \"where\",                    fact_name = \"mrs_cause\",                    fact_key = \"where_fk\") |>   relate_dimension(dimension_name = \"when\",                    fact_name = \"mrs_cause\",                    fact_key = \"when_fk\")"},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a geographic vector from a query — run_geoquery","title":"Get a geographic vector from a query — run_geoquery","text":"defining query geographic dimensions, run query select geographic data associated get geographic data layer result.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a geographic vector from a query — run_geoquery","text":"","code":"run_geoquery(   dq,   unify_by_grain = TRUE,   fact = NULL,   dimension = NULL,   attribute = NULL,   wider = FALSE )  # S3 method for dimensional_query run_geoquery(   dq,   unify_by_grain = TRUE,   fact = NULL,   dimension = NULL,   attribute = NULL,   wider = FALSE )"},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a geographic vector from a query — run_geoquery","text":"dq dimensional_query object. unify_by_grain boolean, unify facts grain. fact string, name fact. dimension string, name geographic dimension. attribute string, name geographic attribute consider. wider boolean, avoid repeating geographic data.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a geographic vector from a query — run_geoquery","text":"sf object.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a geographic vector from a query — run_geoquery","text":"case several fact tables, option, can indicate want unify facts case grain. result one fact table, necessary provide name. necessary indicate name geographic dimension one available. attribute specified, geographic attribute result finer granularity selected. geographic layers, geographic objects repeated. tables wide: object rest attributes defined columns. means parameter wider can indicate want result type.","code":""},{"path":[]},{"path":"https://josesamos.github.io/geomultistar/reference/run_geoquery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a geographic vector from a query — run_geoquery","text":"","code":"library(starschemar)  gms <- geomultistar(ms = ms_mrs, geodimension = \"where\") |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   )  |>   define_geoattribute(     attribute = \"state\",     from_layer = usa_states,     by = c(\"state\" = \"state\")   ) |>   define_geoattribute(attribute = \"region\",                       from_attribute = \"state\") |>   define_geoattribute(attribute = \"all_where\",                       from_layer = usa_nation)  gdq <- dimensional_query(gms) |>   select_dimension(name = \"where\",                    attributes = c(\"state\", \"city\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\", \"when_happened_week\")) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\")   ) |>   select_fact(name = \"mrs_cause\",               measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", state == \"MA\")  sf <- gdq |>   run_geoquery()  sfw <- gdq |>   run_geoquery(wider = TRUE)"},{"path":"https://josesamos.github.io/geomultistar/reference/save_as_geopackage.html","id":null,"dir":"Reference","previous_headings":"","what":"Save as geopackage — save_as_geopackage","title":"Save as geopackage — save_as_geopackage","text":"Save result geoquery geopackage. result can layer form flat table list consisting layer description table variables.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/save_as_geopackage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save as geopackage — save_as_geopackage","text":"","code":"save_as_geopackage(sf, layer_name, file_name = NULL, filepath = NULL)"},{"path":"https://josesamos.github.io/geomultistar/reference/save_as_geopackage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save as geopackage — save_as_geopackage","text":"sf tibble list tibble objects. layer_name string. file_name string. filepath string.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/save_as_geopackage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save as geopackage — save_as_geopackage","text":"tibble list tibble objects.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/save_as_geopackage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save as geopackage — save_as_geopackage","text":"","code":"library(starschemar)  gms <- geomultistar(ms = ms_mrs, geodimension = \"where\") |>   define_geoattribute(     attribute = \"city\",     from_layer = usa_cities,     by = c(\"city\" = \"city\", \"state\" = \"state\")   )  |>   define_geoattribute(     attribute = \"state\",     from_layer = usa_states,     by = c(\"state\" = \"state\")   ) |>   define_geoattribute(attribute = \"region\",                       from_attribute = \"state\") |>   define_geoattribute(attribute = \"all_where\",                       from_layer = usa_nation)  gdq <- dimensional_query(gms) |>   select_dimension(name = \"where\",                    attributes = c(\"state\", \"city\")) |>   select_dimension(name = \"when\",                    attributes = c(\"when_happened_year\", \"when_happened_week\")) |>   select_fact(     name = \"mrs_age\",     measures = c(\"n_deaths\")   ) |>   select_fact(name = \"mrs_cause\",               measures = c(\"pneumonia_and_influenza_deaths\", \"other_deaths\")) |>   filter_dimension(name = \"when\", when_happened_week <= \"03\") |>   filter_dimension(name = \"where\", state == \"MA\")  sf <- gdq |>   run_geoquery(wider = TRUE) # \\donttest{ save_as_geopackage(sf, \"city\", filepath = tempdir()) #> Deleting source `/tmp/Rtmp5IedLDcity.gpkg' failed #> Writing layer `city' to data source `/tmp/Rtmp5IedLDcity.gpkg' using driver `GPKG' #> Writing 9 features with 19 fields and geometry type Point. #> $sf #> Simple feature collection with 9 features and 19 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -72.58981 ymin: 41.63622 xmax: -70.9342 ymax: 42.63342 #> Geodetic CRS:  NAD83 #> # A tibble: 9 × 20 #>     fid when_happened_year state city        n_deaths_01 n_deaths_02 n_deaths_03 #>   <int> <chr>              <chr> <chr>             <int>       <int>       <int> #> 1     1 1962               MA    Boston              262         270         237 #> 2     2 1962               MA    Cambridge            38          27          36 #> 3     3 1962               MA    Fall River           31          38          35 #> 4     4 1962               MA    Lowell               35          37          28 #> 5     5 1962               MA    Lynn                 31          28          26 #> 6     6 1962               MA    New Bedford          33          25          18 #> 7     7 1962               MA    Somerville           19          21          20 #> 8     8 1962               MA    Springfield          50          35          36 #> 9     9 1962               MA    Worcester            62          71          43 #> # ℹ 13 more variables: nrow_agg_01 <int>, nrow_agg_02 <int>, nrow_agg_03 <int>, #> #   mrs_cause_pneumonia_and_influenza_deaths_01 <int>, #> #   mrs_cause_pneumonia_and_influenza_deaths_02 <int>, #> #   mrs_cause_pneumonia_and_influenza_deaths_03 <int>, #> #   mrs_cause_other_deaths_01 <int>, mrs_cause_other_deaths_02 <int>, #> #   mrs_cause_other_deaths_03 <int>, mrs_cause_nrow_agg_01 <int>, #> #   mrs_cause_nrow_agg_02 <int>, mrs_cause_nrow_agg_03 <int>, … #>  #> $variables #> # A tibble: 15 × 3 #>    id_variable                                 measure        when_happened_week #>    <chr>                                       <chr>          <chr>              #>  1 n_deaths_01                                 n_deaths       01                 #>  2 n_deaths_02                                 n_deaths       02                 #>  3 n_deaths_03                                 n_deaths       03                 #>  4 nrow_agg_01                                 nrow_agg       01                 #>  5 nrow_agg_02                                 nrow_agg       02                 #>  6 nrow_agg_03                                 nrow_agg       03                 #>  7 mrs_cause_pneumonia_and_influenza_deaths_01 mrs_cause_pne… 01                 #>  8 mrs_cause_pneumonia_and_influenza_deaths_02 mrs_cause_pne… 02                 #>  9 mrs_cause_pneumonia_and_influenza_deaths_03 mrs_cause_pne… 03                 #> 10 mrs_cause_other_deaths_01                   mrs_cause_oth… 01                 #> 11 mrs_cause_other_deaths_02                   mrs_cause_oth… 02                 #> 12 mrs_cause_other_deaths_03                   mrs_cause_oth… 03                 #> 13 mrs_cause_nrow_agg_01                       mrs_cause_nro… 01                 #> 14 mrs_cause_nrow_agg_02                       mrs_cause_nro… 02                 #> 15 mrs_cause_nrow_agg_03                       mrs_cause_nro… 03                 #>  # }"},{"path":"https://josesamos.github.io/geomultistar/reference/uk_london_boroughs.html","id":null,"dir":"Reference","previous_headings":"","what":"UK London Boroughs — uk_london_boroughs","title":"UK London Boroughs — uk_london_boroughs","text":"original dataset, fields selected renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/uk_london_boroughs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK London Boroughs — uk_london_boroughs","text":"","code":"uk_london_boroughs"},{"path":"https://josesamos.github.io/geomultistar/reference/uk_london_boroughs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK London Boroughs — uk_london_boroughs","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/uk_london_boroughs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK London Boroughs — uk_london_boroughs","text":"https://data.london.gov.uk/dataset/statistical-gis-boundary-files-london","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/uk_london_boroughs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UK London Boroughs — uk_london_boroughs","text":"Since much detail needed, geometry simplified 20 m.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Cities, 2014 — usa_cities","title":"USA Cities, 2014 — usa_cities","text":"original dataset, fields selected renamed, includes Mortality Reporting System cities.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Cities, 2014 — usa_cities","text":"","code":"usa_cities"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Cities, 2014 — usa_cities","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_cities.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Cities, 2014 — usa_cities","text":"https://earthworks.stanford.edu/catalog/stanford-bx729wr3020","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Counties, 2018 — usa_counties","title":"USA Counties, 2018 — usa_counties","text":"original dataset, fields selected renamed, includes Mortality Reporting System counties.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Counties, 2018 — usa_counties","text":"","code":"usa_counties"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_counties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Counties, 2018 — usa_counties","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_counties.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Counties, 2018 — usa_counties","text":"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_county_20m.zip","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_counties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"USA Counties, 2018 — usa_counties","text":"counties appear repeated name within state, following: Baltimore, MD; Richmond, VA; St. Louis, MO. Since accessed name (county state), name within state grouped together.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_divisions.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Divisions, 2018 — usa_divisions","title":"USA Divisions, 2018 — usa_divisions","text":"original dataset, fields selected renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_divisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Divisions, 2018 — usa_divisions","text":"","code":"usa_divisions"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_divisions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Divisions, 2018 — usa_divisions","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_divisions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Divisions, 2018 — usa_divisions","text":"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_division_20m.zip","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_nation.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Nation, 2018 — usa_nation","title":"USA Nation, 2018 — usa_nation","text":"original dataset, fields selected renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_nation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Nation, 2018 — usa_nation","text":"","code":"usa_nation"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_nation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Nation, 2018 — usa_nation","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_nation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Nation, 2018 — usa_nation","text":"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_nation_20m.zip","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"USA Regions, 2018 — usa_regions","title":"USA Regions, 2018 — usa_regions","text":"original dataset, fields selected renamed.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA Regions, 2018 — usa_regions","text":"","code":"usa_regions"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_regions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA Regions, 2018 — usa_regions","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_regions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA Regions, 2018 — usa_regions","text":"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_region_20m.zip","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_states.html","id":null,"dir":"Reference","previous_headings":"","what":"USA States, 2018 — usa_states","title":"USA States, 2018 — usa_states","text":"original dataset, fields selected renamed, includes Mortality Reporting System states.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USA States, 2018 — usa_states","text":"","code":"usa_states"},{"path":"https://josesamos.github.io/geomultistar/reference/usa_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USA States, 2018 — usa_states","text":"sf.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/usa_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USA States, 2018 — usa_states","text":"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/widen_flat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"widen_flat_table — widen_flat_table","title":"widen_flat_table — widen_flat_table","text":"Makes pk fields primary key table. rest fields prevent , extracted another table. original table widened combining extracted fields measures.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/widen_flat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"widen_flat_table — widen_flat_table","text":"","code":"widen_flat_table(ft, pk, measures)"},{"path":"https://josesamos.github.io/geomultistar/reference/widen_flat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"widen_flat_table — widen_flat_table","text":"ft tibble object. pk vector names. measures vector names.","code":""},{"path":"https://josesamos.github.io/geomultistar/reference/widen_flat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"widen_flat_table — widen_flat_table","text":"list tibble objects.","code":""},{"path":"https://josesamos.github.io/geomultistar/news/index.html","id":"geomultistar-111","dir":"Changelog","previous_headings":"","what":"geomultistar 1.1.1","title":"geomultistar 1.1.1","text":"Update documentation website. Use core pipe operator.","code":""},{"path":"https://josesamos.github.io/geomultistar/news/index.html","id":"geomultistar-110","dir":"Changelog","previous_headings":"","what":"geomultistar 1.1.0","title":"geomultistar 1.1.0","text":"CRAN release: 2020-11-15 Include [wider] parameter [run_geoquery()] function define layers geographic elements repeated. Function [save_as_geopackage()] export results geoquery layer explanatory table measurements. Update vignettes readme.","code":""},{"path":"https://josesamos.github.io/geomultistar/news/index.html","id":"geomultistar-100","dir":"Changelog","previous_headings":"","what":"geomultistar 1.0.0","title":"geomultistar 1.0.0","text":"CRAN release: 2020-09-30 Initial functionality. Functions define geographic dimensions: [geomultistar()], [define_geoattribute()] [get_empty_geoinstances()]. Function run query includes geographic data: [run_geoquery()]. Functions import multidimensional data: [multistar()], [add_facts()], [add_dimension()] [relate_dimension()]. Geographical data. USA vector layers: [usa_cities], [usa_counties], [usa_states], [usa_divisions], [usa_regions] [usa_nation]. Geographical data. London boroughs vector layer: [uk_london_boroughs].","code":""}]
